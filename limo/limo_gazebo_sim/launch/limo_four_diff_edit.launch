<?xml version="1.0"?>
<launch>
    <arg name="robot_namespace" default="/"/>
    <arg name="world_name" default="$(find limo_gazebo_sim)/worlds/newAgileXSquare.world"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(arg world_name)"/>
        <arg name="paused" value="false"/>
        <arg name="use_sim_time" value="true"/>
        <arg name="gui" value="true"/>
        <arg name="headless" value="false"/>
        <arg name="debug" value="false"/>
    </include>

  <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames --> 
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.06 0 0.08 0 0 0 base_link laser 30" />
  <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.06 0.02 0 0 0 base_link imu 30" />
  <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.09 0 0 0 base_footprint base_link 30" />
  <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
  <!-- map to odom will be provided by the AMCL -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 10" />

  <!-- Map File -->
  <arg name="map_file" default="$(find limo_gazebo_sim)/maps/LabTrialsfinal.yaml"/>

  <!-- Map Server -->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />

  <!-- Publishes robot path to topic for RVIZ -->
  <node name="path_publisher" pkg="limo_gazebo_sim" type="path_publisher.py" output="screen"/>

  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find limo_gazebo_sim)/param/costmap_common_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find limo_gazebo_sim)/param/costmap_common_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find limo_gazebo_sim)/param/local_costmap_params.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find limo_gazebo_sim)/param/global_costmap_params.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find limo_gazebo_sim)/param/base_local_planner_params.yaml" command="load" />
  </node>

  <include file="$(find limo_gazebo_sim)/launch/scan_republish.launch"/>
  <!-- Add AMCL example for differential drive robots for Localization -->
  <!-- Subscribe: /scan, /tf, /initialpose, /map -->
  <!-- Publish: /amcl_pose, /particlecloud, /tf -->
  <include file="$(find limo_gazebo_sim)/launch/amcl_diff.launch"/>

<!-- Establish robot description from Limo's provided Xacro/urdf-->
    <param name="robot_description" command="$(find xacro)/xacro '$(find limo_description)/urdf/limo_four_diff.xacro'
        robot_namespace:=$(arg robot_namespace)" />

    <!-- initial pose -->
    <arg name="x" default="0.0"/>
    <arg name="y" default="0.0"/>
    <arg name="z" default="0.0"/>
    <arg name="yaw" default="0.0"/>
    <node name="spawn_limo_model" pkg="gazebo_ros" type="spawn_model" args="-x $(arg x)
              -y $(arg y)
              -z $(arg z)
              -Y $(arg yaw)
              -unpause
              -urdf
              -param robot_description
              -model 'limo$(arg robot_namespace)'" />

    <!-- Load joint controller configurations from YAML file to parameter server -->
    <rosparam file="$(find limo_gazebo_sim)/config/limo_four_diff_control.yaml" command="load"/>

    <!-- load the controllers -->
    <node name="controller_spawner" pkg="controller_manager" type="spawner"
          respawn="false" output="screen" args="limo_state_controller "/>

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" />
        
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find limo_description)/rviz/model_display.rviz" />
</launch>
